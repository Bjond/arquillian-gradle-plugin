Gradle Arquillian plugin
========================

Gradle plugin for handling container control and deployment lifecycle.

== Usage

To use the plugin, include in your build script:

[source,groovy]
----
apply plugin: 'arquillian'
----

== Tasks

[options="header"]
|=======
|Task name            |Depends on |Type                |Description
|`arquillianStart`    |-          |ArquillianStart     |Starts a container.
|`arquillianStop`     |-          |ArquillianStop      |Stops a running container.
|`arquillianDeploy`   |-          |ArquillianDeploy    |Deploys an archive to a container.
|`arquillianUndeploy` |-          |ArquillianUndeploy  |Undeploys an archive from a container.
|`arquillianRun`      |-          |ArquillianRun       |Starts the container, deploys an archive to it and waits until the user presses `CTRL + C` to stop.

== Extension properties

The plugin defines the following extension properties in the `arquillian` closure:

[options="header"]
|=======
|Property name |Type    |Default value                                     |Description
|`debug`       |Boolean |`false`                                           |Configures the Arquillian container to run in debug mode.
|`deployable`  |File    |WAR, EAR or JAR file depending on applied plugins |The deployable artifact. This can be a WAR, EAR or JAR file.
|`config`      |File    |`null`                                            |The Arquillian configuration file usually named `arquillian.xml`.
|`launch`      |String  |default in Arquillian configuration file          |The intended Arquillian container to be launched.

=== Example

[source,groovy]
----
arquillian {
    debug = true
    config = file('src/test/resources/arquillian.xml')
}